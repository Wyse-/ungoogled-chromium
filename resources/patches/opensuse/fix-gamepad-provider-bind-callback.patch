--- a/device/gamepad/gamepad_provider.cc
+++ b/device/gamepad/gamepad_provider.cc
@@ -11,6 +11,7 @@
 #include <vector>
 
 #include "base/bind.h"
+#include "base/callback.h"
 #include "base/location.h"
 #include "base/logging.h"
 #include "base/message_loop/message_loop.h"
@@ -27,6 +28,11 @@
 
 namespace device {
 
+void ClearFetchers(std::vector<std::unique_ptr<GamepadDataFetcher>> *v)
+{
+    v->clear();
+}
+
 GamepadProvider::ClosureAndThread::ClosureAndThread(
     const base::Closure& c,
     const scoped_refptr<base::SingleThreadTaskRunner>& m)
@@ -73,8 +79,7 @@
   // some of them require their destructor to be called on the same sequence as
   // their other methods.
   polling_thread_->task_runner()->PostTask(
-      FROM_HERE, base::Bind(&GamepadFetcherVector::clear,
-                            base::Unretained(&data_fetchers_)));
+      FROM_HERE, base::BindOnce(&ClearFetchers, &data_fetchers_));
 
   // Use Stop() to join the polling thread, as there may be pending callbacks
   // which dereference |polling_thread_|.
