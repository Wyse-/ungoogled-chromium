# Disables crashpad_handler process

--- a/third_party/crashpad/crashpad/client/crashpad_client_mac.cc
+++ b/third_party/crashpad/crashpad/client/crashpad_client_mac.cc
@@ -123,6 +123,7 @@
       const std::map<std::string, std::string>& annotations,
       const std::vector<std::string>& arguments,
       bool restartable) {
+	  /*
     base::mac::ScopedMachReceiveRight receive_right(
         NewMachPort(MACH_PORT_RIGHT_RECEIVE));
     if (!receive_right.is_valid()) {
@@ -177,7 +178,9 @@
     // If StartRestartThread() failed, proceed without the ability to restart.
     // handler_restarter will be released when this function returns.
 
-    return send_right;
+	*/
+    // return send_right;
+	return base::mac::ScopedMachSendRight();
   }
 
   // NotifyServer::DefaultInterface:
@@ -459,6 +462,7 @@
   // The “restartable” behavior can only be selected on OS X 10.10 and later. In
   // previous OS versions, if the initial client were to crash while attempting
   // to restart the handler, it would become an unkillable process.
+  /*
   base::mac::ScopedMachSendRight exception_port(
       HandlerStarter::InitialStart(handler,
                                    database,
@@ -473,6 +477,8 @@
 
   SetHandlerMachPort(std::move(exception_port));
   return true;
+  */
+  return false;
 }
 
 bool CrashpadClient::SetHandlerMachService(const std::string& service_name) {
