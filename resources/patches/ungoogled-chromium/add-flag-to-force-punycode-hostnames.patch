# Add flag to force punycode in hostnames instead of Unicode when displaying Internationalized Domain Names (IDNs) to mitigate homograph attacks

--- a/chrome/browser/about_flags.cc
+++ b/chrome/browser/about_flags.cc
@@ -1235,6 +1235,10 @@ const FeatureEntry kFeatureEntries[] = {
      "Record metrics",
      "Record histograms and user actions.",
      kOsAll, SINGLE_VALUE_TYPE("enable-metrics")},
+    {"force-punycode-hostnames",
+     "Force punycode hostnames",
+     "Force punycode in hostnames instead of Unicode when displaying Internationalized Domain Names (IDNs).",
+     kOsAll, SINGLE_VALUE_TYPE("force-punycode-hostnames")},
 
     {"ignore-gpu-blacklist", flag_descriptions::kIgnoreGpuBlacklistName,
      flag_descriptions::kIgnoreGpuBlacklistDescription, kOsAll,
--- a/components/url_formatter/url_formatter.cc
+++ b/components/url_formatter/url_formatter.cc
@@ -8,6 +8,7 @@
 #include <utility>
 #include <vector>
 
+#include "base/command_line.h"
 #include "base/lazy_instance.h"
 #include "base/macros.h"
 #include "base/numerics/safe_conversions.h"
@@ -250,6 +251,11 @@ base::string16 IDNToUnicodeWithAdjustmen
   input16.reserve(host.length());
   input16.insert(input16.end(), host.begin(), host.end());
 
+  if (base::CommandLine::ForCurrentProcess()->HasSwitch("force-punycode-hostnames")) {
+    // Leave as punycode.
+    return input16;
+  }
+
   bool is_tld_ascii = true;
   size_t last_dot = host.rfind('.');
   if (last_dot != base::StringPiece::npos &&
